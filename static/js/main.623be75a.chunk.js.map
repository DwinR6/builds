{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAa5C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAfc,SAACP,GAAKF,EAAcE,EAAEQ,OAAOF,aAoB3DZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,mCC3BrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAAM,4FAA8FC,UAAWH,GAFlG,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAbO,kBAcZA,GAdY,4CAAH,sDCEPS,EAAc,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAa,QAAQC,IAAIL,EAAIT,EAAKU,GAEjB,sBAAKM,UAAU,uCAAf,UACI,qBAAKC,IAAMjB,EAAMkB,IAAMR,IACvB,kCAAMA,EAAN,WCFCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAdAC,qBAAU,WACN1B,EAAQC,GACH0B,MAAK,SAAAC,GACFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAMrB,CAACtB,IAGEuB,EDhB2BK,CAAa5B,GAAlCa,EADwB,EAC7BN,KAAae,EADgB,EAChBA,QAGrB,OAFAP,QAAQC,IAAIM,GAGR,qCACI,mCAAMtB,EAAN,OACEsB,GAAW,mBAAGJ,UAAU,kCAAb,uBACX,qBAAKA,UAAU,6CAAf,SAGML,EAAOJ,KAAI,SAAAC,GAAG,OAAK,cAAC,EAAD,eAAiCA,GAAdA,EAAIC,aEZjDkB,EAAe,WAAO,IAAD,EACM/C,mBAAS,CAAC,eADhB,mBACvBgD,EADuB,KACXjD,EADW,KAK9B,OACI,qCACI,iDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQiD,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAyBA,SAAWA,GAArBA,Y,MCbvC+B,IAASC,OACL,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.623be75a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=>{setInputValue(e.target.value)}\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories (cats => [inputValue,  ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n         \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit= {handleSubmit} >\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async ( category ) => {\r\n\r\n    const url = 'https://api.giphy.com/v1/gifs/search?limit=10&api_key=XfLL1z17YcRPXfPDYj0hdSv86TQpVr9P&q=' + encodeURI( category);\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, url, title); \r\n    return (\r\n        <div className=\"card animate_animated animate__flash\">\r\n            <img src={ url } alt={ title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n "," \r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data:images, loading } =  useFetchGifs(category);\r\n    console.log(loading);\r\n   \r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n            { loading && <p className=\"animate_animated animate__flash\"> Loading </p>}\r\n            { <div className=\"card-grid animate_animated animate__bounce\">\r\n\r\n                {\r\n                    images.map(img => (<GifGridItem key={ img.id } {... img}/> ))\r\n                } \r\n\r\n            </div>}\r\n        </> \r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({ \r\n                    data: imgs,\r\n                    loading: false\r\n                }\r\n            );\r\n        \r\n            })\r\n        }, \r\n        [category] \r\n    );\r\n    \r\n    return state;  \r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Fairy Tail']);\r\n    //const handleAdd = () => {\r\n    //    setcategories(cats => [...cats, 'Tu m'])\r\n    //}\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App </h2>  \r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>          \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key= {category} category= {category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\nimport './index.css';   \r\nReactDOM.render(\r\n    <GifExpertApp />, document.getElementById('root')\r\n)"],"sourceRoot":""}